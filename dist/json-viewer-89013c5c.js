const compose=(...e)=>e.reduce((e,r)=>(...t)=>e(r(...t))),isString=e=>"string"==typeof e,trim=e=>e.trim(),isObject=e=>null!==e&&""+e=="[object Object]",replace=(...e)=>r=>r.replace(...e),isAllStrings=e=>Array.isArray(e)&&e.every(isString),fromEntries=e=>Object.fromEntries?Object.fromEntries(e):e.reduce((e,[r,t])=>({[r]:t,...e}),{}),flatMap=e=>r=>"flatMap"in Array.prototype?r.flatMap(e):r.reduce((r,t)=>r.concat(e(t)),[]),pick=(e,r)=>e.reduce((e,t)=>Object.assign(e,{[t]:r[t]}),{}),stripUndefinedVals=flatMap(([e,r])=>void 0===r?[]:[[e,r]]),stripUndefined=compose(fromEntries,stripUndefinedVals,Object.entries),mark=e=>e instanceof Element?`<mark part='string'>${e.outerHTML.replace(/</g,"&lt;").replace(/"/g,"'")}</mark>`:isObject(e)||Array.isArray(e)?e:`<mark part='${null===e?"null":typeof e}'>${e}</mark>`,replacer=(e,r)=>{return""===e?r:(t=r)instanceof Element?`<mark part='string'>${t.outerHTML.replace(/</g,"&lt;").replace(/"/g,"'")}</mark>`:isObject(t)||Array.isArray(t)?t:`<mark part='${null===t?"null":typeof t}'>${t}</mark>`;var t},pretty=e=>JSON.stringify(e,replacer,2),markKeys=replace(/"(.*)":/g,(e,r)=>`<mark part="key">"${r}"</mark>:`),wrapStrings=replace(/"<mark(.*)>(.*)<\/mark>"/g,(e,r,t)=>`<mark${r}>${r.includes("string")?`"${t}"`:t}</mark>`),json=compose(wrapStrings,markKeys,pretty,stripUndefined),toStringList=e=>(e||"").split(",").map(trim).filter(Boolean),css='\n[hidden],\n:host([hidden]) {\n  display: none !important;\n}\n\n:host {\n  display: block;\n  position: relative;\n  color: var(--json-viewer-color, currentColor);\n}\n\ncode { white-space: pre; }\nmark { background: none; }\n\n@media (prefers-color-scheme: dark), (prefers-color-scheme: no-preference) {\n  :host { background: var(--json-viewer-background, #212529); }\n  [part="key"] { color: var(--json-viewer-key-color, #ff922b); }\n  [part="boolean"] { color: var(--json-viewer-boolean-color, #22b8cf); }\n  [part="number"] { color: var(--json-viewer-number-color, #51cf66); }\n  [part="null"] { color: var(--json-viewer-null-color, #ff6b6b); }\n  [part="string"] { color: var(--json-viewer-string-color, #22b8cf); }\n}\n\n@media (prefers-color-scheme: light) {\n  :host { background: var(--json-viewer-background, white); }\n  [part="key"] { color: var(--json-viewer-key-color, #f76707); }\n  [part="boolean"] { color: var(--json-viewer-boolean-color, #0c8599); }\n  [part="number"] { color: var(--json-viewer-number-color, #0ca678); }\n  [part="null"] { color: var(--json-viewer-null-color, #e03131); }\n  [part="string"] { color: var(--json-viewer-string-color, #0c8599); }\n}\n',template=document.createElement("template");template.innerHTML='<code hidden part="code"></code>';const AL_ATTR="allowlist",OBJECT_ATTR="object";class JsonViewer extends HTMLElement{static get is(){return"json-viewer"}static get observedAttributes(){return[AL_ATTR,"object"]}get object(){return this.__object}set object(e){e&&"string"==typeof e&&(e=this.tryParse(e)),this.__object=e,this.render()}get allowlist(){return this.__allowlist}set allowlist(e){if(r=e,!Array.isArray(r)||!r.every(isString))throw new Error("allowlist must be an array of strings");var r;this.__allowlist=e;const t=e.join(",");t&&this.setAttribute(AL_ATTR,t),this.render()}get error(){return this.__error}set error(e){this.__error=e,e instanceof Error&&this.dispatchEvent(new CustomEvent("json-parse-error"))}constructor(){if(super(),this.__error=null,this.__allowlist=[],this.__mo=new MutationObserver(this.parse.bind(this)),this.__mo.observe(this,{subtree:!0,characterData:!0,childList:!0}),this.attachShadow({mode:"open"}),"adoptedStyleSheets"in Document.prototype){const e=new CSSStyleSheet;e.replaceSync(css),this.shadowRoot.adoptedStyleSheets=[e]}else this.shadowRoot.innerHTML=`<style>${css}</style>`;this.shadowRoot.append(template.content.cloneNode(!0))}connectedCallback(){this.parse(),this.object&&this.shadowRoot.querySelector("code").hidden&&this.render()}attributeChangedCallback(e,r,t){switch(e){case AL_ATTR:return this.allowlistAttrChanged(t,r);case"object":return this.objectAttrChanged(t,r)}}allowlistAttrChanged(e,r){const t=e;this.allowlist.join(",")!==t&&(this.allowlist=(t||"").split(",").map(trim).filter(Boolean))}objectAttrChanged(e,r){e!==r&&(this.object=this.tryParse(e))}getHighlightedDomString(){const{allowlist:e,object:r}=this;if(void 0===r)return"";const t=Array.isArray(e)&&e.length?(o=r,e.reduce((e,r)=>Object.assign(e,{[r]:o[r]}),{})):r;var o;return json(t)}render(){const e=this.getHighlightedDomString();this.shadowRoot.querySelector("code").hidden=!e,this.shadowRoot.querySelector("code").innerHTML=e}parse(){const e=this.querySelector('script[type="application/json"]')||this.querySelector('script[type="application/ld+json"]')||this,{textContent:r=""}=e;r.trim()&&(this.object=this.tryParse(r))}tryParse(e){let r;try{r=JSON.parse(e)}catch(t){const{name:o,message:s}=t;r={name:o,message:s,string:e},this.error=t}return r}}customElements.define(JsonViewer.is,JsonViewer);export{JsonViewer};